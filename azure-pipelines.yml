# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'windows-2019'
strategy:
  matrix:
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'
    Python38:
      python.version: '3.8'
    Python39:
      python.version: '3.9'
    Python310:
      python.version: '3.10'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    pip install --user --upgrade pip
    pip install poetry
    poetry run python docs/readme_generator.py
    poetry update
    poetry install
  displayName: 'Install dependencies'

- script: |
    poetry run python -m pip install pytest pytest-azurepipelines pytest-cov
    poetry run pytest tests/unit_tests tests/functional_tests --test-run-title="Windows test (python $(python.version))" --cov apteco --cov-report html
  displayName: 'pytest'
